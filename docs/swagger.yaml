definitions:
  model.HTTPResponse:
    properties:
      data: {}
      isSuccess:
        type: boolean
      message:
        $ref: '#/definitions/model.ResponseMessage'
      metaData:
        $ref: '#/definitions/model.Meta'
      pagination:
        $ref: '#/definitions/model.PaginationParam'
    type: object
  model.Meta:
    properties:
      requestId:
        type: string
      timeElapsed:
        type: string
      timestamp:
        type: string
    type: object
  model.PaginationParam:
    properties:
      currentElement:
        type: integer
      currentPage:
        type: integer
      limit:
        type: integer
      totalElement:
        type: integer
      totalPage:
        type: integer
    type: object
  model.ResponseMessage:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  model.User:
    properties:
      createdAt:
        type: integer
      createdBy:
        type: integer
      deletedAt:
        example: "2020-12-31T00:00:00Z"
        type: string
      deletedBy:
        type: integer
      id:
        type: integer
      isFirstLogin:
        type: boolean
      name:
        type: string
      role:
        $ref: '#/definitions/model.role'
      updatedAt:
        type: integer
      updatedBy:
        type: integer
      username:
        type: string
    type: object
  model.UserLoginBody:
    properties:
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.UserLoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/model.User'
    type: object
  model.role:
    enum:
    - Admin
    - Supervisor
    type: string
    x-enum-varnames:
    - Admin
    - Supervisor
info:
  contact:
    email: yerobalg@gmail.com
    name: Yerobal Gustaf Sekeon
  description: API about financial management for construction company
  title: Tigaputera Backend API
  version: "1.0"
paths:
  /ping:
    get:
      description: Check if the server is running
      produces:
      - application/json
      responses:
        "200":
          description: PONG!!
          schema:
            type: string
      summary: Health Check
      tags:
      - Server
  /v1/auth/login:
    post:
      description: Login for user
      parameters:
      - description: User login body
        in: body
        name: loginBody
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.HTTPResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.UserLoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.HTTPResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPResponse'
      summary: Login
      tags:
      - User
swagger: "2.0"
